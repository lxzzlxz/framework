<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuzemin.server.framework.system.message.dao.IUserMessageDao">

    <sql id="find_columns">
        id
        as id,message_id as messageId,status as status,user_id as userId
    </sql>

    <sql id="condition">
        <if test='id != null'>
            and id = #{id, jdbcType=BIGINT}
        </if>
        <if test='subject != null and subject != ""'>
            and instr(subject, #{subject, jdbcType=VARCHAR}) > 0
        </if>
        <if test='status != null'>
            and status = #{status, jdbcType=INTEGER}
        </if>
        <if test="messageId != null">
            and message_id = #{messageId, jdbcType=BIGINT}
        </if>
        <if test="userId != null">
            and user_id = #{userId, jdbcType=BIGINT}
        </if>
    </sql>

    <sql id="page_condition">
        <if test='arg0.id != null'>
            and id = #{arg0.id, jdbcType=BIGINT}
        </if>
        <if test='arg0.subject != null and arg0.subject != ""'>
            and instr(subject, #{arg0.subject, jdbcType=VARCHAR}) > 0
        </if>
        <if test='arg0.status != null'>
            and status = #{arg0.status, jdbcType=INTEGER}
        </if>
    </sql>
    <delete id="deleteByIds">
        delete from tpl_user_message_t
        where user_id=#{userId}
        and message_id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteBySelf">
        delete
        from tpl_user_message_t
        where user_id = #{userId}
    </delete>


    <select id="findPagedList" resultType="com.liuzemin.server.framework.system.message.model.UserMessage">
        select * from (
        select t2.subject as subject,
        t2.content as content,
        t2.creation_date as creationDate,
        t1.message_id as messageId,
        t1.status as status,
        t1.user_id as userId
        from tpl_user_message_t t1 inner join tpl_system_message_t t2 on t1.message_id = t2.id
        where t2.category = 2
        <if test="arg0.userId != null">
            and t1.user_id = #{arg0.userId, jdbcType=BIGINT}
        </if>
        <if test="arg0.messageId != null">
            and t1.message_id = #{arg0.messageId, jdbcType=BIGINT}
        </if>
        <if test="arg0.status != null and arg0.status != -1">
            and t1.status = #{arg0.status, jdbcType=INTEGER}
        </if>
        union all
        select t1.subject as subject,
        t1.content as content,
        t1.creation_date as creationDate,
        t1.id as messageId,
        t2.status as status,
        t2.user_id as userId
        from tpl_system_message_t t1 left join tpl_user_message_t t2 on t1.id = t2.message_id
        where t1.category = 1
        <if test="arg0.status != null and arg0.status != -1 and arg0.status == 1">
            and t2.status is null
        </if>
        <if test="arg0.status != null and arg0.status != -1 and arg0.status == 2">
            and t2.status = 2
        </if>
        <if test="arg0.messageId != null">
            and t1.id = #{arg0.messageId, jdbcType=BIGINT}
        </if>
        ) tt
        order by tt.creationDate desc
        limit #{arg1.startIndex, jdbcType=INTEGER}, #{arg1.pageSize, jdbcType=INTEGER}
    </select>

    <select id="findPagedListCount" resultType="java.lang.Long">
        select count(1)
        from tpl_user_message_t t1 inner join tpl_system_message_t t2 on t1.message_id = t2.id
        where t2.category = 2
        <if test="arg0.userId != null">
            and t1.user_id = #{arg0.userId, jdbcType=BIGINT}
        </if>
        <if test="arg0.messageId != null">
            and t1.message_id = #{arg0.messageId, jdbcType=BIGINT}
        </if>
        <if test="arg0.status != null and arg0.status != -1">
            and t1.status = #{arg0.status, jdbcType=INTEGER}
        </if>
    </select>

    <select id="find" parameterType="com.liuzemin.server.framework.system.message.model.UserMessage"
            resultType="com.liuzemin.server.framework.system.message.model.UserMessage">
        select
        <include refid="find_columns"></include>
        from tpl_user_message_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>
    <select id="getNewMessage" resultType="com.liuzemin.server.framework.system.message.model.UserMessage">
        select
        t2.subject as subject,
        t2.content as content,
        t2.creation_date as creationDate,
        t1.message_id as message_id,
        t1.status as status
        from tpl_user_message_t t1
        inner join tpl_system_message_t t2 on t1.message_id = t2.id
        where
        t2.category = 2
        and t2.creation_date >#{creationDate}
        <if test="userId != null">
            and t1.user_id = #{userId, jdbcType=BIGINT}
        </if>
        <if test="messageId != null">
            and t1.message_id = #{messageId, jdbcType=BIGINT}
        </if>
        <if test="status != null and status != -1">
            and t1.status = #{status, jdbcType=INTEGER}
        </if>
    </select>
    <select id="isExistMsg" resultType="java.lang.Integer">
        select count(1) from tpl_user_message_t where user_id=#{userId} <if test="status != null">and status=#{status}</if>
    </select>

    <insert id="insertList">
        insert into tpl_user_message_t
        (user_id, message_id, status, creation_date, created_by)
        values
        <foreach collection="list" separator="," item="item">
            (
            #{item.userId, jdbcType=BIGINT},
            #{item.messageId, jdbcType=BIGINT},
            #{item.status, jdbcType=INTEGER},
            #{item.creationDate, jdbcType=TIMESTAMP},
            #{item.createdBy, jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <update id="update">
        update tpl_user_message_t
        <set>
            <if test="status != null">
                status = #{status, jdbcType=INTEGER}
            </if>
        </set>
        where message_id = #{messageId, jdbcType=BIGINT} and user_id = #{userId, jdbcType=BIGINT}
    </update>
    <update id="updateBySelf">
        update tpl_user_message_t
        set status=2
        where user_id = #{userId}
          and status = #{status};
    </update>

</mapper>
