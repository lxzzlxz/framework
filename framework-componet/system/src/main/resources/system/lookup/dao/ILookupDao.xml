<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuzemin.server.framework.system.lookup.dao.ILookupDao">

    <sql id="find_columns">
		id as id, `name` as `name`, code as code, description as description, status as status, creation_date as creationDate,
		created_by as createdBy, last_update_date as lastUpdateDate, last_updated_by as lastUpdatedBy
	</sql>

    <sql id="condition">
        <if test='id != null'>
            and id = #{id, jdbcType=BIGINT}
        </if>
        <if test='name != null and name != ""'>
            and instr(`name`, #{name, jdbcType=VARCHAR}) > 0
        </if>
        <if test='code != null and code != ""'>
            and instr(code, #{code, jdbcType=VARCHAR}) > 0
        </if>
        <if test="status != null and status != -1">
            and status = #{status, jdbcType=INTEGER}
        </if>
        <if test='description != null and description != ""'>
            and instr(description, #{description, jdbcType=VARCHAR}) > 0
        </if>
    </sql>

    <sql id="page_condition">
        <if test='arg0.id != null'>
            and id = #{arg0.id, jdbcType=BIGINT}
        </if>
        <if test='arg0.name != null and arg0.name != ""'>
            and instr(`name`, #{arg0.name, jdbcType=VARCHAR}) > 0
        </if>
        <if test='arg0.code != null and arg0.code != ""'>
            and instr(code, #{arg0.code, jdbcType=VARCHAR}) > 0
        </if>
        <if test="arg0.status != null and arg0.status != -1">
            and status = #{arg0.status, jdbcType=INTEGER}
        </if>
        <if test='arg0.description != null and arg0.description != ""'>
            and instr(description, #{arg0.description, jdbcType=VARCHAR}) > 0
        </if>
    </sql>

    <select id="findPagedList" resultType="com.liuzemin.server.framework.system.lookup.model.Lookup">
        select <include refid="find_columns"></include>
        from tpl_lookup_t
        <where>
            <include refid="page_condition"></include>
        </where>
        limit #{arg1.startIndex, jdbcType=INTEGER}, #{arg1.pageSize, jdbcType=INTEGER}
    </select>

    <select id="findPagedListCount" resultType="java.lang.Long">
        select count(1)
        from tpl_lookup_t
        <where>
            <include refid="page_condition"></include>
        </where>
    </select>

    <select id="findList" parameterType="com.liuzemin.server.framework.system.lookup.model.Lookup" resultType="com.liuzemin.server.framework.system.lookup.model.Lookup">
        select <include refid="find_columns"></include>
        from tpl_lookup_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>

    <insert id="insertList">
        insert into tpl_lookup_t
        (`name`, code, description, status, creation_date, created_by, last_update_date, last_updated_by)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.name, jdbcType=VARCHAR},
            #{item.code, jdbcType=VARCHAR},
            #{item.description, jdbcType=VARCHAR},
            #{item.status, jdbcType=INTEGER},
            #{item.creationDate, jdbcType=TIMESTAMP},
            #{item.createdBy, jdbcType=BIGINT},
            #{item.lastUpdateDate, jdbcType=TIMESTAMP},
            #{item.lastUpdatedBy, jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <insert id="insert">
		insert into tpl_lookup_t
		(`name`, code, description, status, creation_date, created_by, last_update_date, last_updated_by)
		values
		(
          #{name, jdbcType=VARCHAR},
          #{code, jdbcType=VARCHAR},
          #{description, jdbcType=VARCHAR},
          #{status, jdbcType=INTEGER},
          #{creationDate, jdbcType=TIMESTAMP},
          #{createdBy, jdbcType=BIGINT},
          #{lastUpdateDate, jdbcType=TIMESTAMP},
          #{lastUpdatedBy, jdbcType=BIGINT}
        )
	</insert>

    <update id="update">
        update tpl_lookup_t
        <set>
            <if test='name != null and name != ""'>
                `name` = #{name, jdbcType=VARCHAR},
            </if>
            <if test='code != null and code != ""'>
                code = #{code, jdbcType=VARCHAR},
            </if>
            <if test='description != null and description != ""'>
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test='status != null'>
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test='lastUpdateDate != null'>
                last_update_date = #{lastUpdateDate, jdbcType=TIMESTAMP},
            </if>
            <if test='lastUpdatedBy != null'>
                last_updated_by = #{lastUpdatedBy, jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateList">
        <foreach collection="list" item="item">
            update tpl_lookup_t
            <set>
                `name` = #{item.name, jdbcType=VARCHAR},
                code = #{item.code, jdbcType=VARCHAR},
                description = #{item.description, jdbcType=VARCHAR},
                status = #{item.status, jdbcType=INTEGER}
                last_update_date = #{item.lastUpdateDate, jdbcType=TIMESTAMP},
                last_updated_by = #{item.lastUpdatedBy, jdbcType=BIGINT},
            </set>
            where id = #{item.id, jdbcType=BIGINT};
        </foreach>
    </update>

    <update id="delete">
        update tpl_lookup_t set delete_flag = 2
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="deleteList">
        update tpl_lookup_t set delete_flag = 2
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")" index="index">
            #{list[${index}], jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>
