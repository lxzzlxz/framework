<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuzemin.server.framework.security.role.dao.IRoleDao">

    <sql id="find_columns">
		id as id, role_name as roleName, status as status, scope as scope, creation_date as creationDate,
		created_by as createdBy, last_update_date as lastUpdateDate, last_updated_by as lastUpdatedBy
	</sql>

    <sql id="condition">
        <if test='id != null'>
            and id = #{id, jdbcType=BIGINT}
        </if>
        <if test='roleName != null and roleName != ""'>
            and instr(role_name, #{roleName, jdbcType=VARCHAR}) > 0
        </if>
        <if test='scope != null and scope != ""'>
            and scope = #{scope, jdbcType=VARCHAR}
        </if>
        <if test='status != null'>
            and status = #{status, jdbcType=INTEGER}
        </if>
        <if test='roleIds != null and roleIds.size > 0'>
            and id in
            <foreach collection="roleIds" separator="," index="index" item="item" open="(" close=")">
                #{roleIds[${index}], jdbcType=BIGINT}
            </foreach>
        </if>
    </sql>

    <sql id="page_condition">
        <if test='arg0.id != null'>
            and id = #{arg0.id, jdbcType=BIGINT}
        </if>
        <if test='arg0.roleName != null and arg0.roleName != ""'>
            and instr(role_name, #{arg0.roleName, jdbcType=VARCHAR}) > 0
        </if>
        <if test='arg0.status != null'>
            and status = #{arg0.status, jdbcType=INTEGER}
        </if>
        <if test='arg0.roleIds != null and arg0.roleIds.size > 0'>
            and id in
            <foreach collection='arg0.roleIds' separator="," index="index" item="item" open="(" close=")">
                #{arg0.roleIds[${index}], jdbcType=BIGINT}
            </foreach>
        </if>
    </sql>

    <select id="findPagedList" resultType="com.liuzemin.server.framework.security.role.model.Role">
        SELECT a.*,b.username as createUser
         FROM `tpl_role_t` a 
         INNER JOIN `tpl_user_t` b ON a.`created_by`=b.`id`
        <where>
            <include refid="page_condition"></include>
        </where>
        limit #{arg1.startIndex, jdbcType=INTEGER}, #{arg1.pageSize, jdbcType=INTEGER}
    </select>

    <select id="findPagedListCount" resultType="java.lang.Long">
        select count(1)
        from tpl_role_t
        <where>
            <include refid="page_condition"></include>
        </where>
    </select>

    <select id="findList" parameterType="com.liuzemin.server.framework.security.role.model.Role" resultType="com.liuzemin.server.framework.security.role.model.Role">
        select <include refid="find_columns"></include>
        from tpl_role_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>

    <insert id="insertList">
        insert into tpl_role_t
        (role_name, scope, status, creation_date, created_by, last_update_date, last_updated_by)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.roleName, jdbcType=VARCHAR},
            #{item.scope, jdbcType=VARCHAR},
            #{item.status, jdbcType=INTEGER},
            #{item.creationDate, jdbcType=TIMESTAMP},
            #{item.createdBy, jdbcType=BIGINT},
            #{item.lastUpdateDate, jdbcType=TIMESTAMP},
            #{item.lastUpdatedBy, jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <insert id="insert">
		insert into tpl_role_t
		(role_name, scope, status, creation_date, created_by, last_update_date, last_updated_by)
		values
		(
            #{roleName, jdbcType=VARCHAR},
            #{scope, jdbcType=VARCHAR},
            #{status, jdbcType=INTEGER},
            #{creationDate, jdbcType=TIMESTAMP},
            #{createdBy, jdbcType=BIGINT},
            #{lastUpdateDate, jdbcType=TIMESTAMP},
            #{lastUpdatedBy, jdbcType=BIGINT}
            )
	</insert>

    <update id="update">
        update tpl_role_t
        <set>
            <if test='roleName != null and roleName != ""'>
                role_name = #{roleName, jdbcType=VARCHAR},
            </if>
            <if test='scope != null'>
                scope = #{scope, jdbcType=VARCHAR},
            </if>
            <if test='status != null'>
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test='creationDate != null'>
                creation_date = #{creationDate, jdbcType=TIMESTAMP},
            </if>
            <if test='createdBy != null'>
                created_by = #{createdBy, jdbcType=BIGINT},
            </if>
            <if test='lastUpdateDate != null'>
                last_update_date = #{lastUpdateDate, jdbcType=TIMESTAMP},
            </if>
            <if test='lastUpdatedBy != null'>
                last_updated_by = #{lastUpdatedBy, jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateList">
        <foreach collection="list" item="item">
            update tpl_role_t
            <set>
                role_name = #{item.roleName, jdbcType=VARCHAR},
                scope = #{item.scope, jdbcType=VARCHAR},
                status = #{item.status, jdbcType=INTEGER},
                creation_date = #{item.creationDate, jdbcType=TIMESTAMP},
                created_by = #{item.createdBy, jdbcType=BIGINT},
                last_update_date = #{item.lastUpdateDate, jdbcType=TIMESTAMP},
                last_updated_by = #{item.lastUpdatedBy, jdbcType=BIGINT},
            </set>
            where id = #{item.id, jdbcType=BIGINT};
        </foreach>
    </update>

    <delete id="delete">
        delete from tpl_role_t
        where id = #{id, jdbcType=BIGINT}
    </delete>

    <delete id="deleteList">
        delete from tpl_role_t
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")" index="index">
            #{list[${index}], jdbcType=BIGINT}
        </foreach>
    </delete>
</mapper>
