<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuzemin.server.framework.security.department.dao.IDepartmentDao">

    <sql id="find_columns">
		id as id, department_name as departmentName, parent_id as parentId, creation_date as creationDate,
		created_by as createdBy, last_update_date as lastUpdateDate, last_updated_by as lastUpdatedBy
	</sql>

    <sql id="condition">
        <if test='id != null'>
            and id = #{id, jdbcType=BIGINT}
        </if>
        <if test='departmentName != null and departmentName != ""'>
            and instr(department_name, #{departmentName, jdbcType=VARCHAR}) > 0
        </if>
        <if test='parentId != null'>
            and parent_id = #{parentId, jdbcType=BIGINT}
        </if>
    </sql>

    <sql id="page_condition">
        <if test='arg0.id != null'>
            and id = #{arg0.id, jdbcType=BIGINT}
        </if>
        <if test='arg0.departmentName != null and arg0.departmentName != ""'>
            and instr(department_name, #{arg0.departmentName, jdbcType=VARCHAR}) > 0
        </if>
        <if test='arg0.parentId != null'>
            and parent_id = #{arg0.parentId, jdbcType=BIGINT}
        </if>
    </sql>

    <select id="findPagedList" resultType="com.liuzemin.server.framework.security.department.model.Department">
        select <include refid="find_columns"></include>
        from tpl_department_t
        <where>
            <include refid="page_condition"></include>
        </where>
        limit #{arg1.startIndex, jdbcType=INTEGER}, #{arg1.pageSize, jdbcType=INTEGER}
    </select>

    <select id="findPagedListCount" resultType="java.lang.Long">
        select count(1)
        from tpl_department_t
        <where>
            <include refid="page_condition"></include>
        </where>
    </select>

    <select id="findList" parameterType="com.liuzemin.server.framework.security.department.model.Department" resultType="com.liuzemin.server.framework.security.department.model.Department">
        select <include refid="find_columns"></include>
        from tpl_department_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>

    <insert id="insertList">
        insert into tpl_department_t
        (department_name, parent_id, creation_date, created_by, last_update_date, last_updated_by)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.departmentName, jdbcType=VARCHAR},
            #{item.parentId, jdbcType=BIGINT},
            #{item.creationDate, jdbcType=TIMESTAMP},
            #{item.createdBy, jdbcType=BIGINT},
            #{item.lastUpdateDate, jdbcType=TIMESTAMP},
            #{item.lastUpdatedBy, jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <insert id="insert">
		insert into tpl_department_t
		(department_name, parent_id, creation_date, created_by, last_update_date, last_updated_by)
		values
		(
         #{departmentName, jdbcType=VARCHAR},
         #{parentId, jdbcType=BIGINT},
         #{creationDate, jdbcType=TIMESTAMP},
         #{createdBy, jdbcType=BIGINT},
         #{lastUpdateDate, jdbcType=TIMESTAMP},
         #{lastUpdatedBy, jdbcType=BIGINT}
        )
	</insert>

    <update id="update">
        update tpl_department_t
        <set>
            <if test='departmentName != null and departmentName != ""'>
                department_name = #{departmentName, jdbcType=VARCHAR},
            </if>
            <if test='parentId != null'>
                parent_id = #{parentId, jdbcType=BIGINT},
            </if>
            <if test='creationDate != null'>
                creation_date = #{creationDate, jdbcType=TIMESTAMP},
            </if>
            <if test='createdBy != null'>
                created_by = #{createdBy, jdbcType=BIGINT},
            </if>
            <if test='lastUpdateDate != null'>
                last_update_date = #{lastUpdateDate, jdbcType=TIMESTAMP},
            </if>
            <if test='lastUpdatedBy != null'>
                last_updated_by = #{lastUpdatedBy, jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateList">
        <foreach collection="list" item="item">
            update tpl_department_t
            <set>
                department_name = #{item.departmentName, jdbcType=VARCHAR},
                parent_id = #{item.parentId, jdbcType=BIGINT},
                creation_date = #{item.creationDate, jdbcType=TIMESTAMP},
                created_by = #{item.createdBy, jdbcType=BIGINT},
                last_update_date = #{item.lastUpdateDate, jdbcType=TIMESTAMP},
                last_updated_by = #{item.lastUpdatedBy, jdbcType=BIGINT},
            </set>
            where id = #{item.id, jdbcType=BIGINT};
        </foreach>
    </update>

    <update id="delete">
        update tpl_department_t set delete_flag = 2
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="deleteList">
        update tpl_department_t set delete_flag = 2
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")" index="index">
            #{list[${index}], jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>
