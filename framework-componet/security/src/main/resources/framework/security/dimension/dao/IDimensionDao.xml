<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuzemin.server.framework.security.dimension.dao.IDimensionDao">

    <sql id="find_columns">
		id as id, dimension_code as dimensionCode, status as status, content as content, description as description, delete_flag as deleteFlag,
		creation_date as creationDate, created_by as createdBy, last_update_date as lastUpdateDate, last_updated_by as lastUpdatedBy
	</sql>

    <sql id="condition">
        <if test='id != null'>
            and id = #{id, jdbcType=BIGINT}
        </if>
        <if test='dimensionCode != null and dimensionCode != ""'>
            and instr(dimension_code, #{dimensionCode, jdbcType=VARCHAR}) > 0
        </if>
        <if test='status != null'>
            and status = #{status, jdbcType=INTEGER}
        </if>
        <if test="deleteFlag != null">
            and delete_flag = #{deleteFlag, jdbcType=VARCHAR}
        </if>
    </sql>

    <sql id="page_condition">
        <if test='arg0.id != null'>
            and id = #{arg0.id, jdbcType=BIGINT}
        </if>
        <if test='arg0.dimensionCode != null and arg0.dimensionCode != ""'>
            and instr(dimension_code, #{arg0.dimensionCode, jdbcType=VARCHAR}) > 0
        </if>
        <if test='arg0.status != null'>
            and status = #{arg0.status, jdbcType=INTEGER}
        </if>
        <if test="arg0.deleteFlag != null">
            and delete_flag = #{arg0.deleteFlag, jdbcType=VARCHAR}
        </if>
    </sql>

    <select id="findPagedList" resultType="com.liuzemin.server.framework.security.dimension.model.Dimension">
        select <include refid="find_columns"></include>
        from tpl_dimension_t
        <where>
            <include refid="page_condition"></include>
        </where>
        limit #{arg1.startIndex, jdbcType=INTEGER}, #{arg1.pageSize, jdbcType=INTEGER}
    </select>

    <select id="findPagedListCount" resultType="java.lang.Long">
        select count(1)
        from tpl_dimension_t
        <where>
            <include refid="page_condition"></include>
        </where>
    </select>

    <select id="findList" parameterType="com.liuzemin.server.framework.security.dimension.model.Dimension" resultType="com.liuzemin.server.framework.security.dimension.model.Dimension">
        select <include refid="find_columns"></include>
        from tpl_dimension_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>

    <insert id="insertList">
        insert into tpl_dimension_t
        (dimension_code, status, content, description, creation_date, created_by, last_update_date, last_updated_by)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.dimensionCode, jdbcType=VARCHAR},
            #{item.status, jdbcType=INTEGER},
            #{item.content, jdbcType=VARCHAR},
            #{item.description, jdbcType=VARCHAR},
            #{item.creationDate, jdbcType=TIMESTAMP},
            #{item.createdBy, jdbcType=BIGINT},
            #{item.lastUpdateDate, jdbcType=TIMESTAMP},
            #{item.lastUpdatedBy, jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <insert id="insert">
		insert into tpl_dimension_t
		(dimension_code, status, content, description, creation_date, created_by, last_update_date, last_updated_by)
		values
		(
         #{dimensionCode, jdbcType=VARCHAR},
         #{status, jdbcType=INTEGER},
         #{content, jdbcType=VARCHAR},
         #{description, jdbcType=VARCHAR},
         #{creationDate, jdbcType=TIMESTAMP},
         #{createdBy, jdbcType=BIGINT},
         #{lastUpdateDate, jdbcType=TIMESTAMP},
         #{lastUpdatedBy, jdbcType=BIGINT}
        )
	</insert>

    <update id="update">
        update tpl_dimension_t
        <set>
            <if test='dimensionCode != null and dimensionCode != ""'>
                dimension_code = #{dimensionCode, jdbcType=VARCHAR},
            </if>
            <if test='status != null'>
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test='content != null and content != ""'>
                content = #{content, jdbcType=VARCHAR},
            </if>
            <if test='description != null and description != ""'>
                description = #{description, jdbcType=VARCHAR},
            </if>
            <if test='deleteFlag != null'>
                delete_flag = #{deleteFlag, jdbcType=INTEGER},
            </if>
            <if test='creationDate != null'>
                creation_date = #{creationDate, jdbcType=TIMESTAMP},
            </if>
            <if test='createdBy != null'>
                created_by = #{createdBy, jdbcType=BIGINT},
            </if>
            <if test='lastUpdateDate != null'>
                last_update_date = #{lastUpdateDate, jdbcType=TIMESTAMP},
            </if>
            <if test='lastUpdatedBy != null'>
                last_updated_by = #{lastUpdatedBy, jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateList">
        <foreach collection="list" item="item">
            update tpl_dimension_t
            <set>
                dimension_code = #{item.dimensionCode, jdbcType=VARCHAR},
                status = #{item.status, jdbcType=INTEGER},
                content = #{item.content, jdbcType=VARCHAR},
                description = #{item.description, jdbcType=VARCHAR},
                creation_date = #{item.creationDate, jdbcType=TIMESTAMP},
                created_by = #{item.createdBy, jdbcType=BIGINT},
                last_update_date = #{item.lastUpdateDate, jdbcType=TIMESTAMP},
                last_updated_by = #{item.lastUpdatedBy, jdbcType=BIGINT},
            </set>
            where id = #{item.id, jdbcType=BIGINT};
        </foreach>
    </update>

    <update id="delete">
        update tpl_dimension_t set delete_flag = 2
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="deleteList">
        update tpl_dimension_t set delete_flag = 2
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")" index="index">
            #{list[${index}], jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>
