<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuzemin.server.framework.security.user.dao.IUserDao">

    <sql id="find_columns">
        id
        as id, user_id	as userId, username as username, mail as mail, phone as phone, gender as gender,
		status as status, delete_flag as deleteFlag,idcard_no as idCardNO,real_name as realName, head_img as headImg, creation_date as creationDate,
		created_by as createdBy, last_update_date as lastUpdateDate, last_updated_by as lastUpdatedBy,
		user_type as userType, auth_status as authStatus,password_status as passwordStatus,auth_times as authTimes
    </sql>

    <sql id="find_detail">
        id
        as id, user_id	as userId, username as username, mail as mail, phone as phone, gender as gender,
		status as status, delete_flag as deleteFlag,idcard_no as idCardNO, head_img as headImg, creation_date as creationDate,
		created_by as createdBy, last_update_date as lastUpdateDate, last_updated_by as lastUpdatedBy,id_card_front as idCardFront,
		id_card_side as idCardSide , user_type as userType, auth_status as authStatus,id_card_img as idCardImg, real_name as realName,
		password_status as passwordStatus,auth_times as authTimes
    </sql>

    <sql id="condition">
        <if test='id != null'>
            and id = #{id, jdbcType=BIGINT}
        </if>
        <if test='userId != null and userId != ""'>
            and user_id = #{userId, jdbcType=VARCHAR}
        </if>
        <if test='password != null and password != ""'>
            and password = #{password, jdbcType=VARCHAR}
        </if>
        <if test='username != null and username != ""'>
            and INSTR(username, #{username, jdbcType=VARCHAR}) > 0
        </if>
        <if test='idCardNO != null and idCardNO != ""'>
            and idcard_no = #{idCardNO, jdbcType=VARCHAR}
        </if>
        <if test='realName != null and realName != ""'>
            and real_name = #{realName, jdbcType=VARCHAR}
        </if>
        <if test='phone != null and phone != ""'>
            and phone = #{phone, jdbcType=VARCHAR}
        </if>
        <if test='mail != null and mail != ""'>
            and mail = #{mail, jdbcType=VARCHAR}
        </if>
        <if test='gender != null'>
            and gender = #{gender, jdbcType=INTEGER}
        </if>
        <if test='status != null'>
            and status = #{status, jdbcType=INTEGER}
        </if>
        <if test='deleteFlag != null'>
            and delete_flag = #{deleteFlag, jdbcType=INTEGER}
        </if>
        <if test='userType != null'>
            and user_type = #{userType, jdbcType=INTEGER}
        </if>
        <if test='authStatus != null'>
            and auth_status = #{authStatus, jdbcType=INTEGER}
        </if>
        <if test='userIds != null and userIds.size > 0'>
            and id in
            <foreach collection="userIds" separator="," index="index" item="item" open="(" close=")">
                #{userIds[${index}], jdbcType=BIGINT}
            </foreach>
        </if>
        <if test='dateFormatStr != null and dateFormatStr != ""'>
            and DATE_FORMAT(creation_date, ${dateFormatStr}) between #{startDate} and #{endDate}
        </if>
    </sql>

    <sql id="page_condition">
        <if test='arg0.id != null'>
            and id = #{arg0.id, jdbcType=BIGINT}
        </if>
        <if test='arg0.userId != null and arg0.userId != ""'>
            and user_id = #{arg0.userId, jdbcType=VARCHAR}
        </if>
        <if test='arg0.password != null and arg0.password != ""'>
            and password = #{arg0.password, jdbcType=VARCHAR}
        </if>
        <if test='arg0.username != null and arg0.username != ""'>
            and instr(username, #{arg0.username, jdbcType=VARCHAR}) > 0
        </if>
        <if test='arg0.idCardNO != null and arg0.idCardNO != ""'>
            and idcard_no = #{arg0.idCardNO, jdbcType=VARCHAR}
        </if>
        <if test='arg0.realName != null and arg0.realName != ""'>
            and real_name = #{arg0.realName, jdbcType=VARCHAR}
        </if>
        <if test='arg0.phone != null and arg0.phone != ""'>
            and phone = #{arg0.phone, jdbcType=VARCHAR}
        </if>
        <if test='arg0.mail != null and arg0.mail != ""'>
            and mail = #{arg0.mail, jdbcType=VARCHAR}
        </if>
        <if test='arg0.gender != null'>
            and gender = #{arg0.gender, jdbcType=INTEGER}
        </if>
        <if test='arg0.status != null'>
            and status = #{arg0.status, jdbcType=INTEGER}
        </if>
        <if test='arg0.deleteFlag != null'>
            and delete_flag = #{arg0.deleteFlag, jdbcType=INTEGER}
        </if>
        <if test='arg0.userType != null'>
            and user_type = #{arg0.userType, jdbcType=INTEGER}
        </if>
        <if test='arg0.authStatus != null'>
            and auth_status = #{arg0.authStatus, jdbcType=INTEGER}
        </if>
        <if test='arg0.userIds != null and arg0.userIds.size > 0'>
            and id in
            <foreach collection='arg0.userIds' separator="," index="index" item="item" open="(" close=")">
                #{arg0.userIds[${index}], jdbcType=BIGINT}
            </foreach>
        </if>
        <if test="arg0.startDate != null and arg0.endDate != null">
            and DATE_FORMAT(creation_date, ${arg0.dateFormatStr}) between #{arg0.startDate} and #{arg0.endDate}
        </if>
    </sql>
    <select id="queryRegisterUserNum" resultType="com.liuzemin.server.framework.model.model.User">
        SELECT *
        FROM tpl_user_t
        WHERE delete_flag = 1
          and user_type in (0, 1, 2)
    </select>
    <select id="getInfo" resultType="com.liuzemin.server.framework.model.model.User">
        select *
        from tpl_user_t
        where delete_flag = 1
          and id = #{id};
    </select>
    <select id="isExistTelphone" resultType="int">
        SELECT COUNT(*)
        FROM tpl_user_t
        WHERE phone = #{phone} limit 1
    </select>
    <select id="findNameByRoleName" resultType="com.liuzemin.server.framework.model.model.User">
        SELECT c.`id`,
               c.`username`
        FROM `tpl_role_t` a
                 INNER JOIN `tpl_user_role_program_t` b
                            ON a.id = b.`role_id`
                 INNER JOIN `tpl_user_t` c
                            ON b.`user_id` = c.`id`
        WHERE a.`role_name` = #{roleName}
    </select>

    <select id="findPagedList" resultType="com.liuzemin.server.framework.model.model.User">
        select t1.*,
        t2.username as createdUser,
        t3.username as updatedUser
        from (
        select id as id,
        user_id as userId,
        username as username,
        mail as mail,
        real_name realName,
        phone as phone,
        gender as gender,
        status as status,
        delete_flag as deleteFlag,
        idcard_no as idCardNO,
        head_img as headImg,
        creation_date as creationDate,
        created_by as createdBy,
        last_update_date as lastUpdateDate,
        last_updated_by as lastUpdatedBy,
        user_type as userType,
        auth_times as authTimes,
        auth_status as authStatus,
        password_status as passwordStatus
        from tpl_user_t
        <where>
            <include refid="page_condition"></include>
        </where>
        order by creation_date desc
        limit #{arg1.startIndex, jdbcType=INTEGER}, #{arg1.pageSize, jdbcType=INTEGER}
        ) t1 left join tpl_user_t t2 on t1.createdBy = t2.id
        left join tpl_user_t t3 on t1.lastUpdatedBy = t3.id
    </select>

    <select id="findPagedListCount" resultType="java.lang.Long">
        select count(1)
        from tpl_user_t
        <where>
            <include refid="page_condition"></include>
        </where>
    </select>


    <select id="obtainUser" parameterType="java.lang.Long" resultType="com.liuzemin.server.framework.model.model.User">
        select
        <include refid="find_columns"></include>
        from tpl_user_t
        <where>
            id = #{id, jdbcType=BIGINT}
        </where>
    </select>

    <select id="findList" parameterType="com.liuzemin.server.framework.model.model.User"
            resultType="com.liuzemin.server.framework.model.model.User">
        select
        <include refid="find_detail"></include>
        from tpl_user_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>

    <select id="findDetail" parameterType="com.liuzemin.server.framework.model.model.User"
            resultType="com.liuzemin.server.framework.model.model.User">
        select
        <include refid="find_detail"></include>
        from tpl_user_t
        <where>
            <include refid="condition"></include>
        </where>
    </select>

    <insert id="insertList">
        insert into tpl_user_t
        (user_id, username, mail, phone, gender, idcard_no, status, password, head_img, creation_date, created_by,
        last_update_date, last_updated_by
        ,id_card_front,id_card_side,user_type,auth_status,id_card_img, password_status)
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.userId, jdbcType=VARCHAR},
            #{item.username, jdbcType=VARCHAR},
            #{item.mail, jdbcType=VARCHAR},
            #{item.phone, jdbcType=VARCHAR},
            #{item.gender, jdbcType=INTEGER},
            #{item.idCardNO, jdbcType=VARCHAR},
            #{item.status, jdbcType=VARCHAR},
            #{item.password, jdbcType=VARCHAR},
            #{item.headImg, jdbcType=VARCHAR},
            #{item.creationDate, jdbcType=TIMESTAMP},
            #{item.createdBy, jdbcType=BIGINT},
            #{item.lastUpdateDate, jdbcType=TIMESTAMP},
            #{item.lastUpdatedBy, jdbcType=BIGINT},
            #{item.idCardFront, jdbcType=VARCHAR},
            #{item.idCardSide, jdbcType=VARCHAR},
            #{item.userType, jdbcType=INTEGER},
            #{item.authStatus, jdbcType=INTEGER},
            #{item.idCardImg, jdbcType=VARCHAR},
            #{item.passwordStatus, jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.liuzemin.server.framework.model.model.User">
        insert into tpl_user_t
        (user_id, username, mail, phone, gender, idcard_no, status, password, head_img, creation_date, created_by,
         last_update_date, last_updated_by,
         id_card_front, id_card_side, user_type, auth_status, id_card_img, password_status, auth_times)
        values (#{userId, jdbcType=VARCHAR},
                #{username, jdbcType=VARCHAR},
                #{mail, jdbcType=VARCHAR},
                #{phone, jdbcType=VARCHAR},
                #{gender, jdbcType=INTEGER},
                #{idCardNO, jdbcType=VARCHAR},
                #{status, jdbcType=VARCHAR},
                #{password, jdbcType=VARCHAR},
                #{headImg, jdbcType=VARCHAR},
                #{creationDate, jdbcType=TIMESTAMP},
                #{createdBy, jdbcType=BIGINT},
                #{lastUpdateDate, jdbcType=TIMESTAMP},
                #{lastUpdatedBy, jdbcType=BIGINT},
                #{idCardFront, jdbcType=VARCHAR},
                #{idCardSide, jdbcType=VARCHAR},
                #{userType, jdbcType=INTEGER},
                #{authStatus, jdbcType=INTEGER},
                #{idCardImg, jdbcType=VARCHAR},
                #{passwordStatus, jdbcType=INTEGER},
                #{authTimes, jdbcType=INTEGER})
    </insert>

    <update id="update">
        update tpl_user_t
        <set>
            <if test='userId != null and userId != ""'>
                user_id = #{userId, jdbcType=VARCHAR},
            </if>
            <if test='username != null and username != ""'>
                username = #{username, jdbcType=VARCHAR},
            </if>
            <if test='mail != null'>
                mail = #{mail, jdbcType=VARCHAR},
            </if>
            <if test='phone != null and phone != ""'>
                phone = #{phone, jdbcType=VARCHAR},
            </if>
            <if test='gender != null'>
                gender = #{gender, jdbcType=INTEGER},
            </if>
            <if test='idCardNO != null'>
                idcard_no = #{idCardNO, jdbcType=VARCHAR},
            </if>
            <if test='realName != null'>
                real_name = #{realName, jdbcType=VARCHAR},
            </if>
            <if test='status != null'>
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test='deleteFlag != null'>
                delete_flag = #{deleteFlag, jdbcType=INTEGER},
            </if>
            <if test='password != null and password != ""'>
                password = #{password, jdbcType=INTEGER},
            </if>
            <if test='headImg != null '>
                head_img = #{headImg, jdbcType=VARCHAR},
            </if>
            <if test='creationDate != null'>
                creation_date = #{creationDate, jdbcType=TIMESTAMP},
            </if>
            <if test='createdBy != null'>
                created_by = #{createdBy, jdbcType=BIGINT},
            </if>
            <if test='lastUpdateDate != null'>
                last_update_date = #{lastUpdateDate, jdbcType=TIMESTAMP},
            </if>
            <if test='lastUpdatedBy != null'>
                last_updated_by = #{lastUpdatedBy, jdbcType=BIGINT},
            </if>
            <if test='idCardFront != null'>
                id_card_front = #{idCardFront, jdbcType=VARCHAR},
            </if>
            <if test='idCardSide != null'>
                id_card_side = #{idCardSide, jdbcType=VARCHAR},
            </if>
            <if test='userType != null'>
                user_type = #{userType, jdbcType=INTEGER},
            </if>
            <if test='authStatus != null'>
                auth_status = #{authStatus, jdbcType=INTEGER},
            </if>
            <if test='idCardImg != null'>
                id_card_img = #{idCardImg, jdbcType=VARCHAR},
            </if>
            <if test="passwordStatus != null">
                password_status = #{passwordStatus, jdbcType=INTEGER},
            </if>
            <if test="authTimes != null">
                auth_times = #{authTimes, jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateByPhone">
        update tpl_user_t
        <set>
            <if test='userId != null and userId != ""'>
                user_id = #{userId, jdbcType=VARCHAR},
            </if>
            <if test='username != null and username != ""'>
                username = #{username, jdbcType=VARCHAR},
            </if>
            <if test='mail != null and mail != ""'>
                mail = #{mail, jdbcType=VARCHAR},
            </if>
            <if test='gender != null'>
                gender = #{gender, jdbcType=INTEGER},
            </if>
            <if test='idCardNO != null'>
                idcard_no = #{idCardNO, jdbcType=VARCHAR},
            </if>
            <if test='realName != null'>
                real_name = #{realName, jdbcType=VARCHAR},
            </if>
            <if test='status != null'>
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test='deleteFlag != null'>
                delete_flag = #{deleteFlag, jdbcType=INTEGER},
            </if>
            <if test='password != null and password != ""'>
                password = #{password, jdbcType=INTEGER},
            </if>
            <if test='headImg != null'>
                head_img = #{headImg, jdbcType=VARCHAR},
            </if>
            <if test='creationDate != null'>
                creation_date = #{creationDate, jdbcType=TIMESTAMP},
            </if>
            <if test='createdBy != null'>
                created_by = #{createdBy, jdbcType=BIGINT},
            </if>
            <if test='lastUpdateDate != null'>
                last_update_date = #{lastUpdateDate, jdbcType=TIMESTAMP},
            </if>
            <if test='lastUpdatedBy != null'>
                last_updated_by = #{lastUpdatedBy, jdbcType=BIGINT},
            </if>
            <if test='idCardFront != null'>
                id_card_front = #{idCardFront, jdbcType=VARCHAR},
            </if>
            <if test='idCardSide != null'>
                id_card_side = #{idCardSide, jdbcType=VARCHAR},
            </if>
            <if test='userType != null'>
                user_type = #{userType, jdbcType=INTEGER},
            </if>
            <if test='authStatus != null'>
                auth_status = #{authStatus, jdbcType=INTEGER},
            </if>
            <if test='idCardImg != null'>
                id_card_img = #{idCardImg, jdbcType=VARCHAR},
            </if>
            <if test="passwordStatus != null">
                password_status = #{passwordStatus, jdbcType=INTEGER},
            </if>
        </set>
        where phone = #{phone, jdbcType=VARCHAR}
    </update>

    <update id="updateList">
        <foreach collection="list" item="item">
            update tpl_user_t
            <set>
                user_id = #{item.userId, jdbcType=VARCHAR},
                username = #{item.username, jdbcType=VARCHAR},
                phone = #{item.phone, jdbcType=VARCHAR},
                mail = #{item.mail, jdbcType=VARCHAR},
                gender = #{item.gender, jdbcType=INTEGER},
                idcard_no = #{item.idCardNO, jdbcType=VARCHAR},
                status = #{item.status, jdbcType=INTEGER},
                head_img = #{item.headImg, jdbcType=VARCHAR},
                creation_date = #{item.creationDate, jdbcType=TIMESTAMP},
                created_by = #{item.createdBy, jdbcType=BIGINT},
                created_user = #{item.createdUser, jdbcType=VARCHAR},
                last_update_date = #{item.lastUpdateDate, jdbcType=TIMESTAMP},
                last_updated_by = #{item.lastUpdatedBy, jdbcType=BIGINT},
                last_updated_user = #{item.updatedUser, jdbcType=VARCHAR},
                id_card_front = #{idCardFront, jdbcType=VARCHAR},
                id_card_side = #{idCardSide, jdbcType=VARCHAR},
                user_type = #{userType, jdbcType=INTEGER},
                auth_status = #{authStatus, jdbcType=INTEGER},
                id_card_img = #{idCardImg, jdbcType=VARCHAR}
            </set>
            where id = #{item.id, jdbcType=BIGINT};
        </foreach>
    </update>

    <update id="delete">
        DELETE
        t1,t2,t3
        FROM
          `tpl_user_t` t1
          LEFT JOIN tpl_user_message_t t2
            ON t1.id = t2.user_id
          LEFT JOIN tpl_user_role_program_t t3
            ON t1.id = t3.user_id
        WHERE t1.id =
        #{id}
    </update>

    <update id="deleteList">
        update tpl_user_t set delete_flag = 2
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")" index="index">
            #{list[${index}], jdbcType=BIGINT}
        </foreach>
    </update>

    <select id="findPassword" resultType="java.lang.String" parameterType="java.lang.Long">
        select password
        from tpl_user_t
        where id = #{id, jdbcType=BIGINT}
    </select>
    <select id="getNotAuthSupplierNum" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `tpl_user_t`
        WHERE user_type = 0
          and delete_flag = 1
    </select>
    <select id="getAllTypeNum" resultType="java.util.Map">
        SELECT user_type type,
               COUNT(*)  num
        FROM `tpl_user_t`
        WHERE delete_flag = 1
        GROUP BY user_type
    </select>
    <select id="getNumberOfUserTypes"
            resultType="com.liuzemin.server.framework.security.user.vo.UserTypeStatisticsVO">
        SELECT DATE_FORMAT(creation_date, ${dateFormatStr}) as dateTime,
               user_type                                       userType,
               COUNT(*)                                        number
        FROM `tpl_user_t`
        WHERE DATE_FORMAT(creation_date, ${dateFormatStr}) between #{startDate} and #{endDate}
        GROUP BY user_type, DATE_FORMAT(creation_date, ${dateFormatStr})
    </select>
    <select id="queryById" resultType="com.liuzemin.server.framework.model.model.User">
        select *
        from `tpl_user_t`
        WHERE delete_flag = 1
          and id = #{id}
    </select>
    <select id="findEnterprise" resultType="com.liuzemin.server.framework.model.model.Enterprise">
        select * from tpl_enterprise_t
        <where>
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and instr(name, #{name})>0
            </if>
            <if test="businessLicense != null and businessLicense != ''">
                and business_license = #{businessLicense}
            </if>
            <if test="applicationInformation != null and applicationInformation != ''">
                and application_information = #{applicationInformation}
            </if>
            <if test="legalPersonIdCardNo != null and legalPersonIdCardNo != ''">
                legal_person_id_card_no = #{legalPersonIdCardNo},
            </if>
            <if test="ids != null">
                and id in
                <foreach collection="ids" index="index" open="(" close=")" separator=",">
                    #{ids[${index}]}
                </foreach>
            </if>
            <if test="userIds != null and userIds.size>0">
                and user_id in
                <foreach collection="userIds" index="index" open="(" close=")" separator=",">
                    #{userIds[${index}]}
                </foreach>
            </if>
            <if test="legalPersonName != null and legalPersonName != ''">
                and legal_person_name = #{legalPersonName}
            </if>
            <if test="frontOfCorporateIdCard != null and frontOfCorporateIdCard != ''">
                and front_of_corporate_id_card = #{frontOfCorporateIdCard}
            </if>
            <if test="backOfCorporateIdCard != null and backOfCorporateIdCard != ''">
                and back_of_corporate_id_card = #{backOfCorporateIdCard}
            </if>
            <if test="certificateOfAuthorization != null and certificateOfAuthorization != ''">
                and certificate_of_authorization = #{certificateOfAuthorization}
            </if>
            <if test="recommendedUnit != null">
                and recommended_unit = #{recommendedUnit}
            </if>
            <if test="recommendedUnits != null and recommendedUnits.size>0">
                and recommended_unit in
                <foreach collection="recommendedUnits" index="index" open="(" close=")" separator=",">
                    #{recommendedUnits[${index}]}
                </foreach>
            </if>
            <if test="enterpriseCategory != null">
                and enterprise_category = #{enterpriseCategory}
            </if>
            <if test="enterpriseType != null">
                and enterprise_type = #{enterpriseType}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="uniformSocialCreditCode != null">
                and uniform_social_credit_code = #{uniformSocialCreditCode}
            </if>
            <if test="registeredCapital != null">
                and registered_capital = #{registeredCapital}
            </if>
            <if test="scoreDevStart != null">
                and score_dev <![CDATA[ >= ]]> #{scoreDevStart, jdbcType=FLOAT}
            </if>
            <if test="scoreDevEnd != null">
                and score_dev <![CDATA[ < ]]> #{scoreDevEnd, jdbcType=FLOAT}
            </if>
            <if test="approvalUserId != null">
                and approval_user_id = #{approvalUserId}
            </if>
            <if test="approvalStatus != null">
                and approval_status = #{approvalStatus}
            </if>
            <if test="approvalDate != null">
                and approval_date = #{approvalDate}
            </if>
            <if test="dateOfEstablishment != null">
                and date_of_establishment = #{dateOfEstablishment}
            </if>
            <if test="humanResourcesLicense != null">
                and human_resources_license = #{humanResourcesLicense},
            </if>
            <if test="placeOfBusiness != null ">
                and place_of_business = #{placeOfBusiness},
            </if>
            <if test="responsibleApprovalStatus != null">
                and responsible_approval_status = #{responsibleApprovalStatus}
            </if>
            <if test="responsibleApprovalDate != null">
                and responsible_approval_date = #{responsibleApprovalDate}
            </if>
            <if test="secretaryApprovalStatus != null">
                and secretary_approval_status = #{secretaryApprovalStatus}
            </if>
            <if test="secretaryApprovalDate != null">
                and secretary_approval_date = #{secretaryApprovalDate}
            </if>
            <if test='createdBy != null'>
                and created_by = #{createdBy}
            </if>
            <if test="deleteFlag != null">
                and delete_flag = #{deleteFlag}
            </if>
            <if test="registerDateFormatStr != null">
                and DATE_FORMAT(register_date, ${registerDateFormatStr}) between #{registerStartDate} and
                #{registerEndDate}
            </if>
        </where>
    </select>
</mapper>
